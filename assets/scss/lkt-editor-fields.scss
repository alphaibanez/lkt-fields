@use "lkt-fields-config";
@use "mixins/mixins";
@use "node_modules/lkt-theme/lkt-theme";

@mixin __generateColor($color, $contrast) {
  &.is-editor {
    .sun-editor {
      @include mixins.generate-color-style($color, $contrast);
      .se-toolbar {
        outline-color: $color;
      }
    }

    &:hover {
      .sun-editor {
        @include mixins.generate-color-style-hover($color, $contrast);
        .se-toolbar {
          outline-color: $color;
        }
      }
    }
  }
}

@mixin generate() {
  .lkt-field {
    &.is-editor {
      display: flex;
      flex-direction: column-reverse;
      position: relative;
      font-size: lkt-fields-config.$font-size;
      color: lkt-fields-config.$font-color-label;

      .sun-editor {
        width: 100% !important;
        border: lkt-fields-config.$border-width lkt-fields-config.$border-style lkt-fields-config.$border-color;
        box-shadow: lkt-fields-config.$box-shadow;
        background-color: lkt-fields-config.$background-color;
        color: lkt-fields-config.$font-color;

        .se-toolbar {
          z-index: 2;

          &.se-toolbar-sticky {
            position: static !important;
          }
        }

        .se-wrapper {
          .se-wrapper-inner {
            min-height: lkt-fields-config.get-height-eight();
          }
        }

        + label {
          @include mixins.getLabelStyles();
        }
      }
    }

    $colors: lkt-theme.get-color-map();
    @each $code, $palette in $colors {
      $color: map-get($palette, color);
      $contrast: map-get($palette, contrast);

      &--#{$code} {
        @include __generateColor($color, $contrast);
      }
    }
  }
}



