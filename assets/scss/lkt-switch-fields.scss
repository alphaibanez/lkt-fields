@use "lkt-fields-config";
@use "mixins/mixins";
@use "node_modules/lkt-theme/lkt-theme";

@mixin __generateColor($color, $contrast) {
  &.is-switch {
    input[type="checkbox"] {
    }
  }
}

@mixin generate() {

  @if lkt-theme.$primary-transition == false {
    $transition: lkt-theme.$primary-transition !global;
  }

  .lkt-field {
    &.is-switch {
      display: flex;
      height: 34px;
      font-size: 16px;
      position: relative;
      margin-top: 0 !important;

      flex-direction: row;
      align-items: center;
      color: lkt-fields-config.$font-color-label;

      label {

        &:before,
        &:after {
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
          transition: all linear 200ms;
          display: block;
          content: '';
          border-radius: lkt-theme.$primary-border-radius;
        }

        &:before {
          left: 0;
          width: 42px;
          height: 22px;
          background-color: #eeeeee;
          border: 1px solid #cccccc;
          z-index: 1;
        }

        &:after {
          left: 2px;
          width: 18px;
          height: 18px;
          background: lkt-theme.$warning-color;
          z-index: 3;
        }
      }

      input {
        display: none;
        opacity: 0;

        + label {
          @include mixins.getLabelStyles();
          padding-left: 50px;
        }

        &:checked + label {
          &:after {
            background: lkt-theme.$success-color;
            left: 22px;
          }
        }

        &:disabled {
          + label:after {
            background: rgba(lkt-theme.$warning-color, .4);
          }

          &:checked {
            + label:after {
              background: rgba(lkt-theme.$success-color, .4);
            }
          }
        }
      }


      input {

        @if lkt-theme.$disabled-color {
          &[disabled],
          &[readonly] {
            box-shadow: none;
            border-color: lkt-theme.$disabled-color;
            background-color: lkt-theme.$disabled-color-contrast !important;
          }
        }
      }
    }

    @if (lkt-theme.$primary-color) {
      &--primary {
        @include __generateColor(lkt-theme.$primary-color, lkt-theme.$primary-color-contrast);
      }
    }

    @if (lkt-theme.$success-color) {
      &--success {
        @include __generateColor(lkt-theme.$success-color, lkt-theme.$success-color-contrast);
      }
    }

    @if (lkt-theme.$warning-color) {
      &--warning {
        @include __generateColor(lkt-theme.$warning-color, lkt-theme.$warning-color-contrast);
      }
    }

    @if (lkt-theme.$danger-color) {
      &--danger {
        @include __generateColor(lkt-theme.$danger-color, lkt-theme.$danger-color-contrast);
      }
    }

    @if (lkt-theme.$info-color) {
      &--danger {
        @include __generateColor(lkt-theme.$info-color, lkt-theme.$info-color-contrast);
      }
    }
  }
}


