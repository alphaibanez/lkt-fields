@use "lkt-fields-config";
@use "mixins/mixins";
@use "node_modules/lkt-theme/lkt-theme";

@mixin __generateColor($color, $contrast) {
  &.is-text,
  &.is-textarea,
  &.is-password,
  &.is-tel,
  &.is-email {
    input, textarea {
      @include mixins.generate-color-style($color, $contrast);
    }

    &:hover {
      input, textarea {
        @include mixins.generate-color-style-hover($color, $contrast);
      }
    }
  }
}

@mixin generate() {

  @if lkt-theme.$primary-transition == false {
    $transition: lkt-theme.$primary-transition !global;
  }

  .lkt-field {
    &.is-text,
    &.is-textarea,
    &.is-password,
    &.is-tel,
    &.is-email {
      display: flex;
      flex-direction: column-reverse;
      position: relative;
      color: lkt-fields-config.$font-color-label;

      textarea {
        height: lkt-fields-config.get-height-two();
        min-height: lkt-fields-config.get-height-two();
        resize: vertical;
      }

      input {
        height: lkt-fields-config.get-height-one();
      }

      textarea,
      input {
        @include mixins.getInputStyles();

        + label {
          @include mixins.getLabelStyles();
        }
      }


      textarea,
      input {

        @if lkt-theme.$focus-color {
          &:focus {
            outline: 0;
            border-color: lkt-theme.$focus-color;
            box-shadow: 0 0 0 2px lkt-theme.$focus-color;
          }
        }

        @if lkt-theme.$disabled-color {
          &[disabled],
          &[readonly] {
            box-shadow: none;
            border-color: lkt-theme.$disabled-color;
            background-color: lkt-theme.$disabled-color-contrast !important;
          }
        }
      }
    }

    $colors: lkt-theme.get-color-map();
    @each $code, $palette in $colors {
      $color: map-get($palette, color);
      $contrast: map-get($palette, contrast);

      &--#{$code} {
        @include __generateColor($color, $contrast);
      }
    }
  }
}


